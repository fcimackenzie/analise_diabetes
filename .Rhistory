df3$variables <- df3$variables[, !colnames(df3$variables) %in% droplist2]
model3 <- construir_modelo(df3)
print(summary(model3))
df_model3 = ordenar_pvalue(model3)
print(df_model3[df_model3$p_value < 0.5, ])
print(df_model3[df_model3$p_value > 0.5, ])
print(df_model1[df_model1$p_value < 0.5, ])
construir_modelo <- function(df){
nomes = names(df$variables[1:(length(df$variables) - 1)])
fla <- paste("diagnostico_diabetes_q030.1 ~", paste(nomes, collapse="+"), " -1")
gl <- survey::svyglm(as.formula(fla) , family = "binomial", design=df)
return(gl)
}
ordenar_pvalue <- function(model){
df_model = data.frame(keyName=names(model$coefficients), value=model$coefficients, row.names=NULL)
df_model$COEFF_ABS = abs(df_model$value)
df_model$COEFF_ABS = abs(df_model$value)
p <- coef(summary(model))[,4]
df_p = data.frame(keyName=names(p), value=p, row.names=NULL)
df_model$p_value <- p
df_model <- df_model[order(df_model$p_value),]
return(df_model)
}
model1 <- construir_modelo(df)
print(summary(model1))
df_model1 = ordenar_pvalue(model1)
model1.reduced
View(model1)
deviance(model1)/df.residual(model1)
construir_modelo <- function(df){
nomes = names(df$variables[1:(length(df$variables) - 1)])
fla <- paste("diagnostico_diabetes_q030.1 ~", paste(nomes, collapse="+"), " -1")
gl <- survey::svyglm(as.formula(fla) , family = "quasibinomial", design=df)
return(gl)
}
ordenar_pvalue <- function(model){
df_model = data.frame(keyName=names(model$coefficients), value=model$coefficients, row.names=NULL)
df_model$COEFF_ABS = abs(df_model$value)
df_model$COEFF_ABS = abs(df_model$value)
p <- coef(summary(model))[,4]
df_p = data.frame(keyName=names(p), value=p, row.names=NULL)
df_model$p_value <- p
df_model <- df_model[order(df_model$p_value),]
return(df_model)
}
model1 <- construir_modelo(df)
print(summary(model1))
df_model1 = ordenar_pvalue(model1)
deviance(model1)/df.residual(model1)
construir_modelo <- function(df){
nomes = names(df$variables[1:(length(df$variables) - 1)])
fla <- paste("diagnostico_diabetes_q030.1 ~", paste(nomes, collapse="+"), " -1")
gl <- survey::svyglm(as.formula(fla) , family = "quasibinomial", design=df)
return(gl)
}
ordenar_pvalue <- function(model){
df_model = data.frame(keyName=names(model$coefficients), value=model$coefficients, row.names=NULL)
df_model$COEFF_ABS = abs(df_model$value)
df_model$COEFF_ABS = abs(df_model$value)
p <- coef(summary(model))[,4]
df_p = data.frame(keyName=names(p), value=p, row.names=NULL)
df_model$p_value <- p
df_model <- df_model[order(df_model$p_value),]
return(df_model)
}
model1 <- construir_modelo(df)
print(summary(model1))
df_model1 = ordenar_pvalue(model1)
deviance(model1)/df.residual(model1)
print(df_model1[df_model1$p_value < 0.5, ])
construir_modelo <- function(df){
nomes = names(df$variables[1:(length(df$variables) - 1)])
fla <- paste("diagnostico_diabetes_q030.1 ~", paste(nomes, collapse="+"), " -1")
gl <- survey::svyglm(as.formula(fla) , family = "binomial", design=df)
return(gl)
}
ordenar_pvalue <- function(model){
df_model = data.frame(keyName=names(model$coefficients), value=model$coefficients, row.names=NULL)
df_model$COEFF_ABS = abs(df_model$value)
df_model$COEFF_ABS = abs(df_model$value)
p <- coef(summary(model))[,4]
df_p = data.frame(keyName=names(p), value=p, row.names=NULL)
df_model$p_value <- p
df_model <- df_model[order(df_model$p_value),]
return(df_model)
}
modelb <- construir_modelo(df)
print(summary(modelb))
df_modelb = ordenar_pvalue(modelb)
summary(model1)$dispersion
pchisq(dispersion(model1) * df.residual(modelb), df.residual(modelb), lower=F)
pchisq(summary(model1)$dispersion * df.residual(modelb), df.residual(modelb), lower.tail = F)
summary(model1)$dispersion
pchisq(summary(model1)$dispersion * modelb$df.residual, modelb$df.residual, lower.tail = F)
modelb$df.residual
df.residual(modelb)
model1$deviance
modelb$df.residual
summary(model1)$dispersion
summary(model1)$dispersion * modelb$df.residual
AER
install.packages("AER")
install.packages("AER")
library(AER)
knitr::opts_chunk$set(echo = TRUE)
library(srvyr)
knitr::opts_chunk$set(echo = TRUE)
library(srvyr)
knitr::opts_chunk$set(echo = TRUE)
library(srvyr)
install.packages("srvyr")
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
library(dummies)
library(mlr)
library(caret)
library(AER)
construir_modelo <- function(df){
nomes = names(df$variables[1:(length(df$variables) - 1)])
fla <- paste("diagnostico_diabetes_q030.1 ~", paste(nomes, collapse="+"), " -1")
gl <- survey::svyglm(as.formula(fla) , family = "binomial", design=df)
return(gl)
}
ordenar_pvalue <- function(model){
df_model = data.frame(keyName=names(model$coefficients), value=model$coefficients, row.names=NULL)
df_model$COEFF_ABS = abs(df_model$value)
df_model$COEFF_ABS = abs(df_model$value)
p <- coef(summary(model))[,4]
df_p = data.frame(keyName=names(p), value=p, row.names=NULL)
df_model$p_value <- p
df_model <- df_model[order(df_model$p_value),]
return(df_model)
}
modelb <- construir_modelo(df)
print(summary(modelb))
df_modelb = ordenar_pvalue(modelb)
AER::dispersiontest(modelb,trafo=1)
AER::dispersiontest(modelb)
install.packages("qcc")
install.packages("msme")
summ_modelb = summary(modelb)
summ_modelb$dispersion
summ_modelb$dispersion$variance
summ_modelb$dispersion[1]
pchisq(summary(model1)$dispersion[1] * modelb$df.residual, modelb$df.residual, lower.tail = F)
knitr::opts_chunk$set(echo = TRUE)
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
library(dummies)
library(mlr)
library(caret)
library(AER)
#ajustar como os resutados serão mostrados
options( survey.lonely.psu = "adjust" )
library(survey)
#importando a biblioteca.
pns_design <- readRDS(file.path(path.expand( ".." ) ,
"databases",
"2013 long questionnaire survey design.rds" ))
#Utilizando o pacote `srvyr`
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
#adiciona a sintaxe dplyr de manipulação de dados ao pacote survey
pns_design_srvyr <- as_survey_design(pns_design)
pns_design_srvyr <- pns_design_srvyr %>% mutate(imc = w00103/(w00203/100*w00203/100))
pns_design_srvyr <- pns_design_srvyr %>%
mutate(imcclass = case_when(imc < 17.0 ~ "1",
imc >= 17.0 & imc < 18.5 ~ "2",
imc >= 18.5 & imc < 25.0 ~ "3",
imc >= 25.0 & imc < 30.0 ~ "4",
imc >= 30.0 & imc < 35.0 ~ "5",
imc >= 35.0 & imc < 40.0 ~ "6",
imc >= 40.0 ~ "7"
))
# Criando uma variavel de faixa etaria
pns_design_srvyr <- pns_design_srvyr %>% mutate(idade = as.numeric(c008))
pns_design_srvyr <- pns_design_srvyr %>%
mutate(fxetaria = case_when(idade <   5.0 ~ "2",
idade >=  5.0 & idade < 10.0 ~ "7",
idade >= 10.0 & idade < 15.0 ~ "12",
idade >= 15.0 & idade < 20.0 ~ "18",
idade >= 20.0 & idade < 25.0 ~ "22",
idade >= 25.0 & idade < 40.0 ~ "32",
idade >= 40.0 & idade < 60.0 ~ "50",
idade >= 60.0 ~ "60"))
# q030 variável de diagnostico de diabetes
tir <- survey::svytable(~ q030, pns_design_srvyr)
tir.df <- as.data.frame(tir)
tir.df$q030 <- c("Não Aplicável", "Diabético", "Diabete Gestacional", "Não Diabético")
tir.df$Freq <- tir.df$Freq / sum(tir.df$Freq)
p <-ggplot(data=tir.df, aes(x=q030, y=Freq*100, fill = q030)) +
geom_bar(stat="identity") +
geom_text(aes(label=round(Freq*100, digits = 1)), vjust=-0.5, color="black", size=3.5)+
labs_pubr() + theme_pubr()
p
# c006 variavel do sexo do individuo
diab_sexo <- survey::svytable(~ q030 + c006, pns_design_srvyr)
diab_sexo.df <- as.data.frame(diab_sexo)
diab_sexo.df[diab_sexo.df$c006 == "masculino",c("Freq")] <- diab_sexo.df[diab_sexo.df$c006 == "masculino",c("Freq")]/sum(diab_sexo.df[diab_sexo.df$c006 == "masculino",c("Freq")] )
diab_sexo.df[diab_sexo.df$c006 == "feminino",c("Freq")] <- diab_sexo.df[diab_sexo.df$c006 == "feminino",c("Freq")]/sum(diab_sexo.df[diab_sexo.df$c006 == "feminino",c("Freq")] )
diab_sexo.df$q030 <-  c("Não Aplicável", "Diabético", "Diabete Gestacional", "Não Diabético", "Não Aplicável", "Diabético", "Diabete Gestacional", "Não Diabético")
p1 <-ggplot(data=diab_sexo.df, aes(x=q030, y=Freq*100 ,fill=c006)) +
geom_bar(position="dodge", stat="identity") +
geom_text(aes(label=round(Freq*100, digits = 1)), position=position_dodge(width=0.9), vjust=-0.5, color="black", size=3.5)+
theme_minimal()+
ggtitle("Porcentagem diabetes em relação ao sexo") +
xlab("Categoria") + ylab("Porcentagem %")
p1
fxetaria_diab.df = as.data.frame(survey::svytable(~fxetaria + q030, pns_design_srvyr))
grp <- group_by(fxetaria_diab.df, fxetaria) %>% summarise(freq = sum(Freq))
fxetaria_diab.df <- fxetaria_diab.df[fxetaria_diab.df$q030 == "1",]
fxetaria_diab.df$Freq <- fxetaria_diab.df$Freq/grp$freq
fxetaria_diab.df <- fxetaria_diab.df[-2]
p <- ggplot(data=fxetaria_diab.df, aes(x=fxetaria, y=Freq * 100, fill = fxetaria)) +
geom_bar( stat = "identity",  position = "dodge")+  geom_text(aes(label=round(Freq*100, digits = 1)), position=position_dodge(width=0.9), vjust=-0.5, color="black", size=3.5)
p
pns_design_srvyr <- pns_design_srvyr %>% mutate(freqativ = case_when(m016 == 6 ~ 0, # Nenhuma vez
m016 == 5 ~ 1, # Uma vez/ano
m016 == 4 ~ 2, # Algumas vezes/ano
m016 == 3 ~ 3, # 2-3 vezes/mes
m016 == 2 ~ 4, # Uma vez/semana
m016 == 1 ~ 5, # Mais de uma vez/semana
))
freq_diab <- survey::svytable(~ q030 + freqativ + fxetaria , pns_design_srvyr)
freq_diab.df <- as.data.frame(freq_diab)
freq_diab.df <- freq_diab.df[freq_diab.df$q030 == '1',]
freq_diab.df$Freq <- freq_diab.df$Freq/sum(freq_diab.df$Freq)
g <- ggplot(data = freq_diab.df) +
geom_bar(aes(x = freqativ, y = Freq, fill=fxetaria ), stat = "identity") +
labs(x = "Freq Ativ Fisica",y = "Pessoas %", title = "Frequencia de Ativ Fisica x Diabeticos")
g
dist_populacao <- as.data.frame(survey::svytable(~region + v0026, pns_design_srvyr ))
pop_aux1 <- dist_populacao[dist_populacao$v0026 == 1,]
colnames(pop_aux1) <- c("Regiao", "Urbano", "Freq_Urbano")
pop_aux2 <- dist_populacao[dist_populacao$v0026 == 2,]
colnames(pop_aux2) <- c("Regiao", "Rural", "Freq_Rural")
dist_populacao <- cbind(pop_aux1,pop_aux2[, c("Rural", "Freq_Rural")])
dist_populacao$total <- dist_populacao$Freq_Urbano + dist_populacao$Freq_Rural
dist_populacao[,c("Regiao", "Freq_Urbano", "Freq_Rural")]
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#region
diab_estados <- survey::svytable(~ q030 + region + v0026, pns_design_srvyr )
diab_estados.df <- as.data.frame(diab_estados)
diab_estados.df <- diab_estados.df[diab_estados.df$q030 == '1',]
#diab_estados.df$Freq <- diab_estados.df$Freq / sum(diab_estados.df$Freq)
diab_estados.df$v0026 = as.character(diab_estados.df$v0026)
diab_estados.df$v0026[diab_estados.df$v0026 == 1]  = "1 - Urbano"
diab_estados.df$v0026[diab_estados.df$v0026 == 2]  = "2 - Rural"
p <-ggplot(data=diab_estados.df, aes(x=region, y=Freq/1000, fill=v0026)) +
geom_bar(stat="identity") +
geom_text(aes(label=round(Freq/1000, digits = 1)), vjust=1, color="black", size=3.5)
p
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porc_Diabeticos <- diab_estados$Porcent * 100
##
##uf_map <- get_brmap("State") %>%
#  inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot(aes(fill = Porcent)) +
#  geom_sf() +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(get_brmap("State"), data_to_join = porc_est, join_by = c("nome" = "teste"),
var = "Porc_Diabeticos") + scale_fill_continuous(low = "lightblue", high = "darkblue")
survey::svyhist(~as.numeric(q031), subset(pns_design_srvyr, q030==1))
dens <- survey::svysmooth(~as.numeric(q031), subset(pns_design_srvyr, (q030==1) & (q030!=" ")))
pns_design_srvyr <- pns_design_srvyr %>%
mutate(fx_esc = case_when(d009 == "  " ~ "0",
d009 == "01" | d009 == "02" | d009 == "03" | d009 == "05" |  d009 == "06"  ~ "1", # ensino fundamental
d009 == "04" | d009 == "07" | d009 == "08" | d009 == "09" ~ "2", # ensino médio
d009 == "10" ~ "3", # ensino superior
d009 == "11" ~ "4", # mestrado
d009 == "12" ~ "5" )) #doutorado
diab_esc <- survey::svytable(~ q030 + fx_esc, pns_design_srvyr)
diab_esc <- as.data.frame(diab_esc)
diab_esc$porc = 0
pop_esc = group_by(diab_esc, fx_esc) %>% summarise(freq = sum(Freq))
diab_esc = diab_esc[diab_esc$q030 == "1", ]
for (i in pop_esc$fx_esc){
diab_esc[diab_esc$q030 == "1" & diab_esc$fx_esc == i, c("porc")] = diab_esc[diab_esc$q030 == "1" & diab_esc$fx_esc == i, ]$Freq / pop_esc[pop_esc$fx_esc == i,]$freq
}
p <-ggplot(data=diab_esc, aes(x=fx_esc, y=porc )) +
geom_bar(stat="identity") +
geom_text(aes(label=round(porc*100, digits = 1)), vjust=-0.5, color="black", size=3.5)+
labs_pubr() + theme_pubr()
p
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "fx_esc", "w00103", "w00203", "p009", "p018", "p020", "p025", "p026", "p028", "p035", "p050", "q002", "q029", "q060", "q068", "q124","r039", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo_c006","cor_raca_c009", "faixa_escolaridade", "peso_w00103", "altura_w00203", "come_verduras_p009", "come_frutas_p018", "refrigerante_suco_p020", "alimentos_doces_p025", "substitui_refeicoes_p026", "bebida_alcoolica_p028", "dias_semana_ativ_fisica_p035", "fumante_p050", "pressao_alta_q002", "exames_glicemia_q029", "colesterol_alto_q060", "avc_q068", "insuficiencia_renal_q124", "ja_ficou_gravida_r039", "freqativ", "fxetaria", "idade", "imc", "diagnostico_diabetes_q030")
#sexo_c006
#fumante_p050
#pressao_alta_q002
#colesterol_alto_q060
#avc_q068
#insuficiencia_renal_q124
df <- subset(df, diagnostico_diabetes_q030 != " " & diagnostico_diabetes_q030 != 2 & pressao_alta_q002 != " " & colesterol_alto_q060 != " ")
# pressao alta = q002
df$variables$faixa_escolaridade = as.numeric(df$variables$faixa_escolaridade)
df$variables[is.na(df$variables$faixa_escolaridade), c("faixa_escolaridade")] = 0
df$variables[is.na(df$variables$bebida_alcoolica_p028), c("bebida_alcoolica_p028")] = 0
df$variables[is.na(df$variables$dias_semana_ativ_fisica_p035), c("dias_semana_ativ_fisica_p035")] = 0
df$variables[df$variables$ja_ficou_gravida_r039 == " ", c("ja_ficou_gravida_r039")] = 0
df$variables[df$variables$pressao_alta_q002 == " ", c("pressao_alta_q002")] = 0
df$variables[df$variables$colesterol_alto_q060 == " ", c("colesterol_alto_q060")] = 0
df$variables[df$variables$diagnostico_diabetes_q030 == " ", c("diagnostico_diabetes_q030")] = 0
df$variables[df$variables$diagnostico_diabetes_q030 == "2", c("diagnostico_diabetes_q030")] = 0
df$variables[df$variables$diagnostico_diabetes_q030 == "3", c("diagnostico_diabetes_q030")] = 0
df$variables$sexo_c006 <- as.character(df$variables$sexo_c006)
masc_18 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 18 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_22 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 22 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_32 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 32 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_50 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 50 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_60 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 60 & sexo_c006 == "masculino"), na.rm=TRUE))
femi_18 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 18 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_22 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 22 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_32 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 32 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_50 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 50 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_60 = as.numeric(survey::svymean(~peso_w00103 ,subset(x = df, subset = fxetaria == 60 & sexo_c006 == "feminino"), na.rm=TRUE))
df$variables[df$variables$fxetaria == 18 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(masc_18, digits = 1)
df$variables[df$variables$fxetaria == 22 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(masc_22, digits = 1)
df$variables[df$variables$fxetaria == 32 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(masc_32, digits = 1)
df$variables[df$variables$fxetaria == 50 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(masc_50, digits = 1)
df$variables[df$variables$fxetaria == 60 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(masc_60, digits = 1)
df$variables[df$variables$fxetaria == 18 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(femi_18, digits = 1)
df$variables[df$variables$fxetaria == 22 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(femi_22, digits = 1)
df$variables[df$variables$fxetaria == 32 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(femi_32, digits = 1)
df$variables[df$variables$fxetaria == 50 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(femi_50, digits = 1)
df$variables[df$variables$fxetaria == 60 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$peso_w00103), c("peso_w00103")] = round(femi_60, digits = 1)
masc_18 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 18 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_22 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 22 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_32 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 32 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_50 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 50 & sexo_c006 == "masculino"), na.rm=TRUE))
masc_60 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 60 & sexo_c006 == "masculino"), na.rm=TRUE))
femi_18 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 18 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_22 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 22 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_32 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 32 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_50 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 50 & sexo_c006 == "feminino"), na.rm=TRUE))
femi_60 = as.numeric(survey::svymean(~altura_w00203 ,subset(x = df, subset = fxetaria == 60 & sexo_c006 == "feminino"), na.rm=TRUE))
df$variables[df$variables$fxetaria == 18 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$altura_w00203), c("peso_w00103")] = round(masc_18, digits = 1)
df$variables[df$variables$fxetaria == 22 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$altura_w00203), c("peso_w00103")] = round(masc_22, digits = 1)
df$variables[df$variables$fxetaria == 32 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$altura_w00203), c("peso_w00103")] = round(masc_32, digits = 1)
df$variables[df$variables$fxetaria == 50 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$altura_w00203), c("peso_w00103")] = round(masc_50, digits = 1)
df$variables[df$variables$fxetaria == 60 & df$variables$sexo_c006 == "masculino" & is.na(df$variables$altura_w00203), c("peso_w00103")] = round(masc_60, digits = 1)
df$variables[df$variables$fxetaria == 18 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$altura_w00203), c("altura_w00203")] = round(femi_18, digits = 1)
df$variables[df$variables$fxetaria == 22 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$altura_w00203), c("altura_w00203")] = round(femi_22, digits = 1)
df$variables[df$variables$fxetaria == 32 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$altura_w00203), c("altura_w00203")] = round(femi_32, digits = 1)
df$variables[df$variables$fxetaria == 50 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$altura_w00203), c("altura_w00203")] = round(femi_50, digits = 1)
df$variables[df$variables$fxetaria == 60 & df$variables$sexo_c006 == "feminino" & is.na(df$variables$altura_w00203), c("altura_w00203")] = round(femi_60, digits = 1)
df <- df %>% mutate(imc = peso_w00103/(altura_w00203/100* altura_w00203/100))
df$variables <- df$variables %>% mutate(imcclass = case_when(imc < 17.0 ~ "1",
imc >= 17.0 & imc < 18.5 ~ "2",
imc >= 18.5 & imc < 25.0 ~ "3",
imc >= 25.0 & imc < 30.0 ~ "4",
imc >= 30.0 & imc < 35.0 ~ "5",
imc >= 35.0 & imc < 40.0 ~ "6",
imc >= 40.0 ~ "7"
))
df$variables <- df$variables[,c(1:23, 25, 24)]
df$variables[df$variables$sexo_c006 == "masculino", c("sexo_c006")] = 0
df$variables[df$variables$sexo_c006 == "feminino", c("sexo_c006")] = 1
df$variables[df$variables$pressao_alta_q002 == 2, c("pressao_alta_q002")] = 1
df$variables[df$variables$pressao_alta_q002 == 3, c("pressao_alta_q002")] = 0
df$variables[df$variables$colesterol_alto_q060 == 2, c("colesterol_alto_q060")] = 0
df$variables[df$variables$insuficiencia_renal_q124 == 2, c("insuficiencia_renal_q124")] = 0
df$variables[df$variables$fumante_p050 == 2 | df$variables$fumante_p050 == 3, c("fumante_p050")] = 0
df$variables[df$variables$avc_q068 == 2, c("avc_q068")] = 0
df$variables[df$variables$ja_ficou_gravida_r039 == 2, c("ja_ficou_gravida_r039")] = 0
perda_t <- as.data.frame(survey::svytable(~pressao_alta_q002 + colesterol_alto_q060 + diagnostico_diabetes_q030 , df))
print(paste0("quantidade total de diabéticos: ", sum(perda_t[perda_t$diagnostico_diabetes_q030 == 1, c("Freq")])) )
print(paste0("perda de diabéticos: ", sum(perda_t[perda_t$diagnostico_diabetes_q030 == 1 & (perda_t$pressao_alta_q002 == " " | perda_t$colesterol_alto_q060 == " "), c("Freq")])) )
print(paste0("porcentagem de perda de diabeticos: ", sum(perda_t[perda_t$diagnostico_diabetes_q030 == 1 & (perda_t$pressao_alta_q002 == " " | perda_t$colesterol_alto_q060 == " "), c("Freq")]) / sum(perda_t[perda_t$diagnostico_diabetes_q030 == 1, c("Freq")])  ))
print("")
print(paste0("quantidade total : ", sum(perda_t$Freq)))
print(paste0("perda total: ", sum(perda_t[ (perda_t$pressao_alta_q002 == " " | perda_t$colesterol_alto_q060 == " " | perda_t$diagnostico_diabetes_q030 == " "), c("Freq")])) )
print(paste0("porcentagem de perda total: ", sum(perda_t[(perda_t$pressao_alta_q002 == " " | perda_t$colesterol_alto_q060 == " " | perda_t$diagnostico_diabetes_q030 == " "), c("Freq")]) / sum(perda_t$Freq)))
df$variables$exames_glicemia_q029 = NULL
df_dummies = df[ ,c("faixa_escolaridade")]
# esc_dummies <- dummies::dummy(df$variables$escolaridade_d009, sep = "_",)
# df_dummies$variables <- cbind(df_dummies$variables, esc_dummies)
# df_dummies$variables <- df_dummies$variables[, -1]
df_factor = df$variables %>% mutate_if(is.numeric, as.character)
df_factor$sexo_c006 = as.numeric(df_factor$sexo_c006)
df_factor$fumante_p050 = as.numeric(df_factor$fumante_p050)
df_factor$pressao_alta_q002 = as.numeric(df_factor$pressao_alta_q002)
df_factor$colesterol_alto_q060 = as.numeric(df_factor$colesterol_alto_q060)
df_factor$avc_q068 = as.numeric(df_factor$avc_q068)
df_factor$insuficiencia_renal_q124 = as.numeric(df_factor$insuficiencia_renal_q124)
df_factor$ja_ficou_gravida_r039 = as.numeric(df_factor$ja_ficou_gravida_r039)
df_factor$peso_w00103 <- as.numeric(df_factor$peso_w00103)
df_factor$altura_w00203 <- NULL
df_factor$idade <- NULL
df_factor$imc <- NULL
df_factor$peso_w00103 <- NULL
df_factor = df_factor %>% mutate_if(is.character, as.factor)
dummies_df <- mlr::createDummyFeatures(df_factor)
df$variables = dummies_df
df$variables$diagnostico_diabetes_q030.0 = NULL
df$variables$cor_raca_c009.9 = NULL
df$variables$faixa_escolaridade.5 = NULL
df$variables$come_verduras_p009.7 = NULL
df$variables$come_frutas_p018.7 = NULL
df$variables$refrigerante_suco_p020.7 = NULL
df$variables$alimentos_doces_p025.7 = NULL
df$variables$substitui_refeicoes_p026.7 = NULL
df$variables$bebida_alcoolica_p028.7 = NULL
df$variables$dias_semana_ativ_fisica_p035.7 = NULL
df$variables$freqativ.5 = NULL
df$variables$fxetaria.60 = NULL
df$variables$imcclass.7 = NULL
construir_modelo <- function(df){
nomes = names(df$variables[1:(length(df$variables) - 1)])
fla <- paste("diagnostico_diabetes_q030.1 ~", paste(nomes, collapse="+"), " -1")
gl <- survey::svyglm(as.formula(fla) , family = "binomial", design=df)
return(gl)
}
ordenar_pvalue <- function(model){
df_model = data.frame(keyName=names(model$coefficients), value=model$coefficients, row.names=NULL)
df_model$COEFF_ABS = abs(df_model$value)
df_model$COEFF_ABS = abs(df_model$value)
p <- coef(summary(model))[,4]
df_p = data.frame(keyName=names(p), value=p, row.names=NULL)
df_model$p_value <- p
df_model <- df_model[order(df_model$p_value),]
return(df_model)
}
modelb <- construir_modelo(df)
print(summary(modelb))
df_modelb = ordenar_pvalue(modelb)
model1 <- construir_modelo(df)
print(summary(model1))
df_model1 = ordenar_pvalue(model1)
pchisq(summary(model1)$dispersion[1] * modelb$df.residual, modelb$df.residual, lower.tail = F)
print(df_model1[df_model1$p_value < 0.5, ])
droplist1 <- df_model1[df_model1$p_value >= 0.5, 1]
df2 = df
df2$variables <- df2$variables[, !colnames(df2$variables) %in% droplist1]
model2 <- construir_modelo(df2)
print(summary(model2))
df_model2 = ordenar_pvalue(model2)
print(df_model2[df_model2$p_value >= 0.5, ])
droplist2 <- df_model2[df_model2$p_value >= 0.5, 1]
df3 = df2
df3$variables <- df3$variables[, !colnames(df3$variables) %in% droplist2]
model3 <- construir_modelo(df3)
print(summary(model3))
df_model3 = ordenar_pvalue(model3)
print(df_model3[df_model3$p_value > 0.5, ])
modelqb <- construir_modelo(df)
print(summary(modelqb))
df_modelqb = ordenar_pvalue(modelqb)
pchisq(summary(modelqb)$dispersion[1] * modelb$df.residual, modelb$df.residual, lower.tail = F)
print(df_modelqb[df_modelqb$p_value < 0.5, ])
droplist1 <- df_modelb[df_modelb$p_value >= 0.5, 1]
df2 = df
df2$variables <- df2$variables[, !colnames(df2$variables) %in% droplist1]
model2 <- construir_modelo(df2)
print(summary(model2))
df_model2 = ordenar_pvalue(model2)
print(df_model2[df_model2$p_value >= 0.5, ])
droplist2 <- df_model2[df_model2$p_value >= 0.5, 1]
df3 = df2
df3$variables <- df3$variables[, !colnames(df3$variables) %in% droplist2]
model3 <- construir_modelo(df3)
print(summary(model3))
df_model3 = ordenar_pvalue(model3)
print(df_model3[df_model3$p_value > 0.5, ])
droplist2 <- df_model2[df_model2$p_value >= 0.5, 1]
df3 = df2
df3$variables <- df3$variables[, !colnames(df3$variables) %in% droplist2]
print(df_model2[df_model2$p_value >= 0.5, ])
droplist2 <- df_model2[df_model2$p_value >= 0.5, 1]
df3 = df2
df3$variables <- df3$variables[, !colnames(df3$variables) %in% droplist2]
model3 <- construir_modelo(df3)
print(summary(model3))
df_model3 = ordenar_pvalue(model3)
print(df_model3[df_model3$p_value > 0.5, ])
droplist3 <- df_model3[df_model3$p_value >= 0.5, 1]
df4 = df3
df4$variables <- df4$variables[, !colnames(df4$variables) %in% droplist3]
droplist3 <- df_model3[df_model3$p_value >= 0.5, 1]
df4 = df3
df4$variables <- df4$variables[, !colnames(df4$variables) %in% droplist3]
model4 <- construir_modelo(df4)
print(summary(model4))
df_model4 = ordenar_pvalue(model4)
print(df_model3[df_model3$p_value > 0.5, ])
print(df_model4[df_model4$p_value > 0.5, ])
