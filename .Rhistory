uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map %>%
ggplot() +
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot() +
#  geom_sf(aes(fill = Porcent)) +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(uf_map)
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))+
ggplot() +
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map <-  uf_map %>%
ggplot() +
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(uf_map)
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map %>%
ggplot() +
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
pns_design_srvyr[,]
pns_design_srvyr[,c("q030")]
pns_design_srvyr[,c("c006","q030", "c008", "c009", "m016", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "P028", "P029", "P03701", "P03702", "Q002", "Q029", "Q030", "Q060", "Q068", "Q124", "S020", "S021", "W00407", "W00408")]
pns_design_srvyr[,c("c006","q030", "c008", "c009", "m016", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "P028", "P029", "P03701", "P03702", "Q002", "Q029", "Q030", "Q060", "Q068", "Q124", "S020", "S021", "W00407", "W00408")]
pns_design_srvyr[,c("c006","q030", "c008", "c009", "m016", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408")]
teste = pns_design_srvyr[,c("c006","q030", "c008", "c009", "m016", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408")]
View(teste)
survey::svyhist(~as.numeric(q031), subset(pns_design_srvyr, q030==1))
dens <- survey::svysmooth(~as.numeric(q031), subset(pns_design_srvyr, (q030==1) & (q030!=" ")))
lines(dens,col="blue",lwd=2)
knitr::opts_chunk$set(echo = TRUE)
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
#Utilizando o pacote `srvyr`
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
teste = pns_design_srvyr[,c("c006","q030", "c008", "c009", "m016", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", imc)]
teste = pns_design_srvyr[,c("c006","q030", "c008", "c009", "m016", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
head(teste)
View(teste)
View(teste$variables)
View(teste$prob)
names(teste$variables)
teste = pns_design_srvyr[,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
names(teste$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","tipo_refrigerante","qtd_copos","freq_doces","freq_bebida_alcoolica","dias_semana_alcool","doses_bebida_alcoolica","horas_exercicio_fisico","min_exercicio_fisico","hipertensao_arterial","ultimo_exame_glicemia","diag_diabeticos","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc")
names(teste$variables)
View(teste$variables)
teste = pns_design_srvyr[,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
names(teste$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","tipo_refrigerante","qtd_copos","freq_doces","freq_bebida_alcoolica","dias_semana_alcool","doses_bebida_alcoolica","horas_exercicio_fisico","min_exercicio_fisico","hipertensao_arterial","ultimo_exame_glicemia","diag_diabeticos","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc")
summary(teste$variables)
df = pns_design_srvyr[,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
names(df$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","tipo_refrigerante","qtd_copos","freq_doces","freq_bebida_alcoolica","dias_semana_alcool","doses_bebida_alcoolica","horas_exercicio_fisico","min_exercicio_fisico","hipertensao_arterial","ultimo_exame_glicemia","diag_diabeticos","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc")
summary(df$variables)
view(teste$prob)
View(teste$prob)
View(df)
View(df$cluster)
View(df$strata)
View(df$allprob)
View(df$postStrata)
knitr::opts_chunk$set(echo = TRUE)
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
%>%
?%>%
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State")
uf_map
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
#Utilizando o pacote `srvyr`
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map %>%
ggplot() +
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
stat_sf()
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map %>%
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map %>%
ggplot() +
geom_sf(aes(fill = Porcent)) +
scale_fill_continuous(low = "lightblue", high = "darkblue")
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
uf_map <- get_brmap("State") %>%
inner_join(porc_est, c("nome" = "teste"))
uf_map %>%
ggplot(aes(fill = Porcent)) +
geom_sf() +
scale_fill_continuous(low = "lightblue", high = "darkblue")
View(porc_est)
View(porc_est)
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
##
##uf_map <- get_brmap("State") %>%
#  inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot(aes(fill = Porcent)) +
#  geom_sf() +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(get_brmap("State"), data_to_join = porc_est, join_by = c("nome" = "teste"),
var = "Porcent", theme = theme_map())
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
##
##uf_map <- get_brmap("State") %>%
#  inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot(aes(fill = Porcent)) +
#  geom_sf() +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(get_brmap("State"), data_to_join = porc_est, join_by = c("nome" = "teste"),
var = "Porcent", theme = scale_fill_continuous(low = "lightblue", high = "darkblue"))
?theme
theme_map()
?theme_map()
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
##
##uf_map <- get_brmap("State") %>%
#  inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot(aes(fill = Porcent)) +
#  geom_sf() +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(get_brmap("State"), data_to_join = porc_est, join_by = c("nome" = "teste"),
var = "Porcent", scale_fill_continuous(low = "lightblue", high = "darkblue"))
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
##
##uf_map <- get_brmap("State") %>%
#  inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot(aes(fill = Porcent)) +
#  geom_sf() +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(get_brmap("State"), data_to_join = porc_est, join_by = c("nome" = "teste"),
var = "Porcent") + scale_fill_continuous(low = "lightblue", high = "darkblue")
view(pns_design_srvyr$variables)
View(pns_design_srvyr$variables)
knitr::opts_chunk$set(echo = TRUE)
#Separando a base de dados
df = pns_design_srvyr[,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
#Separando a base de dados
df = pns_design_srvyr[,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
pns_design_srvyr[,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
df = pns_design_srvyr[ ,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
survey::svyhist(~as.numeric(q031), subset(pns_design_srvyr, q030==1))
dens <- survey::svysmooth(~as.numeric(q031), subset(pns_design_srvyr, (q030==1) & (q030!=" ")))
lines(dens,col="blue",lwd=2)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q030", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc")]
names(df$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","tipo_refrigerante","qtd_copos","freq_doces","freq_bebida_alcoolica","dias_semana_alcool","doses_bebida_alcoolica","horas_exercicio_fisico","min_exercicio_fisico","hipertensao_arterial","ultimo_exame_glicemia","diag_diabeticos","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","ficou_gravida","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc")
View(df$variables)
df <- df %>% mutate_at(vars("dias_ativ_fisica"), ~replace(., is.na(.), 0))
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
df <- df %>% mutate_at(vars("dias_ativ_fisica"), ~replace(., is.na(.), 0))
View(df$variables)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", , "q030")]
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "p03701", "p03702", "q002", "q029", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","tipo_refrigerante","qtd_copos","freq_doces","freq_bebida_alcoolica","dias_semana_alcool","doses_bebida_alcoolica","horas_exercicio_fisico","min_exercicio_fisico","hipertensao_arterial","ultimo_exame_glicemia","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","ficou_gravida","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc","diag_diabeticos")
df <- subset(df, ultimo_exame_glicemia != 6)
df_sem_exames <- subset(df, ultimo_exame_glicemia==6)
df = pns_design_srvyr[ ,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p021", "p022", "p025", "p027", "p028", "p029", "q002", "q029", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","tipo_refrigerante","qtd_copos","freq_doces","freq_bebida_alcoolica","dias_semana_alcool","doses_bebida_alcoolica","hipertensao_arterial","ultimo_exame_glicemia","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","ficou_gravida","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc","diag_diabeticos")
df_sem_exames <- subset(df, ultimo_exame_glicemia==6)
df <- subset(df, ultimo_exame_glicemia != 6)
View(df$variables)
View(df_sem_exames$variables)
df_sem_exames <- df[df$variables$ultimo_exame_glicemia == 6, ]
df <- subset(df, ultimo_exame_glicemia != 6)
df <- df %>% mutate_at(vars("dias_ativ_fisica", "qtd_copos", "freq_bebida_alcoolica"), ~replace(., is.na(.), 0))
View(df_sem_exames)
View(df_sem_exames$variables)
a <- subset(df, ultimo_exame_glicemia != 6)
View(a$variables)
rm(a)
subset(df, ultimo_exame_glicemia != 6)
View(subset(df, ultimo_exame_glicemia != 6)$variables)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "p035", "w00103", "w00203", "w00303", "j004", "p020", "p022", "p025", "p027", "q002", "q029", "q060", "q068", "q124", "r039", "s020", "s021", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo","cor_raca","dias_ativ_fisica","peso_final","altura_final","circ_cintura_final","impedimento_ativ_fisica","refrigerante_suco","qtd_copos","freq_doces","freq_bebida_alcoolica","hipertensao_arterial","ultimo_exame_glicemia","diag_colesterol_alto","diag_avc_derrame","diag_insuficiencia_renal","ficou_gravida","exame_sangue_prenatal","diabetes_prenatal","pressao_arterial_sistolica","pressao_arterial_diastolica","freqativ","fxetaria","idade","imc","diag_diabeticos")
View(df$variables)
View(df$variables)
?mutate
knitr::opts_chunk$set(echo = TRUE)
df$variables[is.na(df$variables$dias_ativ_fisica), c("dias_ativ_fisica")] = 0
View(df$variables)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "d009", "w00103", "p004", "p009", "p018", "p020", "p025", "p026", "p028", "p035", "p050", "q002", "q029", "q060", "q068", "q124","r039", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
library(srvyr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(knitr)
library(tidyr)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "d009", "w00103", "p004", "p009", "p018", "p020", "p025", "p026", "p028", "p035", "p050", "q002", "q029", "q060", "q068", "q124","r039", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo","cor_raca", "escolaridade", "peso", "altura", "come_verduras", "come_frutas", "refrigerante_suco", "alimentos_doces", "substitui_refeicoes", "bebida_alcoolica", "dias_semana_ativ_fisica", "fumante", "pressao_alta", "exames_glicemia", "colesterol_alto", "avc", "insuficiencia_renal", "ja_ficou_gravida", "pressao_sistolica", "pressao_diastolica", "freqativ", "fxetaria", "idade", "imc", "diagnostico_diabetes")
View(df$variables)
df$variables$escolaridade = as.numeric(df$variables$escolaridade)
df$variables[is.na(df$variables$escolaridade), c("escolaridade")] = 0
df$variables[is.na(df$variables$dias_ativ_fisica), c("dias_ativ_fisica")] = 0
View(df$variables)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "d009", "w00103", "w00203", "p009", "p018", "p020", "p025", "p026", "p028", "p035", "p050", "q002", "q029", "q060", "q068", "q124","r039", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo","cor_raca", "escolaridade", "peso", "altura", "come_verduras", "come_frutas", "refrigerante_suco", "alimentos_doces", "substitui_refeicoes", "bebida_alcoolica", "dias_semana_ativ_fisica", "fumante", "pressao_alta", "exames_glicemia", "colesterol_alto", "avc", "insuficiencia_renal", "ja_ficou_gravida", "pressao_sistolica", "pressao_diastolica", "freqativ", "fxetaria", "idade", "imc", "diagnostico_diabetes")
df$variables$escolaridade = as.numeric(df$variables$escolaridade)
df$variables[is.na(df$variables$escolaridade), c("escolaridade")] = 0
df$variables[is.na(df$variables$dias_ativ_fisica), c("dias_ativ_fisica")] = 0
View(df$variables)
df$variables[is.na(df$variables$bebida_alcoolica), c("bebida_alcoolica")] = 0
View(df$variables)
df$variables[is.na(df$variables$dias_semanas_ativ_fisica), c("dias_semanas_ativ_fisica")] = 0
df$variables[is.na(df$variables$dias_semana_ativ_fisica), c("dias_semana_ativ_fisica")] = 0
View(df$variables)
df$variables[is.na(df$variables$ja_ficou_gravida), c("ja_ficou_gravida")] = 0
View(df$variables)
df$variables[is.na(df$variables$peso), c("pressao_sistolica")]
a = df$variables[is.na(df$variables$peso), c("pressao_sistolica")]
View(a)
#Separando a base de dados
df = pns_design_srvyr[ ,c("c006", "c009", "d009", "w00103", "w00203", "p009", "p018", "p020", "p025", "p026", "p028", "p035", "p050", "q002", "q029", "q060", "q068", "q124","r039", "w00407", "w00408", "freqativ", "fxetaria", "idade", "imc", "q030")]
names(df$variables) = c("sexo","cor_raca", "escolaridade", "peso", "altura", "come_verduras", "come_frutas", "refrigerante_suco", "alimentos_doces", "substitui_refeicoes", "bebida_alcoolica", "dias_semana_ativ_fisica", "fumante", "pressao_alta", "exames_glicemia", "colesterol_alto", "avc", "insuficiencia_renal", "ja_ficou_gravida", "pressao_sistolica", "pressao_diastolica", "freqativ", "fxetaria", "idade", "imc", "diagnostico_diabetes")
df$variables$escolaridade = as.numeric(df$variables$escolaridade)
df$variables[is.na(df$variables$escolaridade), c("escolaridade")] = 0
df$variables[is.na(df$variables$bebida_alcoolica), c("bebida_alcoolica")] = 0
df$variables[is.na(df$variables$dias_semana_ativ_fisica), c("dias_semana_ativ_fisica")] = 0
df$variables[is.na(df$variables$ja_ficou_gravida), c("ja_ficou_gravida")] = 0
View(df$variables)
a = df$variables[is.na(df$variables$peso), c("pressao_sistolica", "diagnostico_diabetes")]
View(a)
a = df$variables[is.na(df$variables$pressao_alta), c("pressao_alta", "diagnostico_diabetes")]
a = df$variables[df$variables$pressao_alta = " ", c("pressao_alta", "diagnostico_diabetes")]
a = df$variables[df$variables$pressao_alta == " ", c("pressao_alta", "diagnostico_diabetes")]
df$variables[is.na(df$variables$ja_ficou_gravida), c("ja_ficou_gravida")] = 0
View(df$variables)
df$variables[df$variables$ja_ficou_gravida == " ", c("ja_ficou_gravida")] = 0
View(df$variables)
a = df$variables[df$variables$pressao_alta == " " || df$variables$diagnostico_diabetes == " " df$variables$colesterol_alto == " ", c("pressao_alta", "diagnostico_diabetes", "colesterol_alto")]
a = df$variables[df$variables$pressao_alta == " " || df$variables$diagnostico_diabetes == " " || df$variables$colesterol_alto == " ", c("pressao_alta", "diagnostico_diabetes", "colesterol_alto")]
a = df$variables[df$variables$pressao_alta == " " | df$variables$diagnostico_diabetes == " " | df$variables$colesterol_alto == " ", c("pressao_alta", "diagnostico_diabetes", "colesterol_alto")]
b = df$variables[df$variables$diagnostico_diabetes == 1, c("pressao_alta", "diagnostico_diabetes", "colesterol_alto")]
View(b)
a = df$variables[(df$variables$pressao_alta == " " | df$variables$diagnostico_diabetes == " " | df$variables$colesterol_alto == " ") & df$variables$diagnostico_diabetes == 1, c("pressao_alta", "diagnostico_diabetes", "colesterol_alto")]
a = df$variables[(df$variables$pressao_alta == " " | df$variables$diagnostico_diabetes == " " | df$variables$colesterol_alto == " ") & df$variables$diagnostico_diabetes == 1, c("pressao_alta", "diagnostico_diabetes", "colesterol_alto", "diagnostico_diabetes")]
# % de perda de diabeticos
perda_diabeticos = df$variables[(df$variables$pressao_alta == " " | df$variables$colesterol_alto == " ") & df$variables$diagnostico_diabetes == 1, c("pressao_alta", "colesterol_alto", "diagnostico_diabetes")]
#
perda_total = df$variables[(df$variables$pressao_alta == " " | df$variables$diagnostico_diabetes == " " | df$variables$colesterol_alto == " "), c("pressao_alta", "colesterol_alto", "diagnostico_diabetes")]
View(perda_total)
perda_d <- as.data.frame(survey::svytable(~pressao_alta + colesterol_alto , df))
View(perda_d)
perda_t <- as.data.frame(survey::svytable(~pressao_alta + colesterol_alto , df))
perda_t <- as.data.frame(survey::svytable(~pressao_alta + colesterol_alto + diagnostico_diabetes , df))
perda_d <- as.data.frame(survey::svytable(~pressao_alta + colesterol_alto , subset(df, diagnostico_diabetes==1)))
View(perda_d)
View(perda_t)
perda_d <- as.data.frame(survey::svytable(~pressao_alta + colesterol_alto + diagnostico_diabetes, subset(df, diagnostico_diabetes==1)))
knitr::opts_chunk$set(echo = TRUE)
#* `Q030`	- Algum médico já lhe deu o diagnóstico de diabetes?
#   + `1` - Sim
#   + V0001 - Unidade da Federação
library(brazilmaps)
mapa <- get_brmap("State")
diab_estados <- as.data.frame(survey::svytable(~ v0001 + q030 , pns_design_srvyr))
qtd_estados = aggregate(diab_estados$Freq, by=list(Category=diab_estados$v0001), FUN=sum)
diab_estados <- diab_estados[diab_estados$q030 == 1,]
diab_estados$Porcent <- diab_estados$Freq / qtd_estados$x
teste <- toupper(c("Rondônia","Acre","Amazonas","Roraima","Pará","Amapá","Tocantins","Maranhão","Piauí","Ceará",
"Rio Grande do Norte","Paraíba","Pernambuco","Alagoas","Sergipe","Bahia","Minas Gerais","Espírito Santo","Rio de Janeiro","São Paulo","Paraná","Santa Catarina","Rio Grande do Sul","Mato Grosso do Sul",
"Mato Grosso","Goiás","Distrito Federal"))
porc_est <- as.data.frame(teste)
porc_est$Porcent <- diab_estados$Porcent
##
##uf_map <- get_brmap("State") %>%
#  inner_join(porc_est, c("nome" = "teste"))
#uf_map %>%
#  ggplot(aes(fill = Porcent)) +
#  geom_sf() +
#  scale_fill_continuous(low = "lightblue", high = "darkblue")
plot_brmap(get_brmap("State"), data_to_join = porc_est, join_by = c("nome" = "teste"),
var = "Porcent") + scale_fill_continuous(low = "lightblue", high = "darkblue")
